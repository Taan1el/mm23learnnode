"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTemplateDependenciesImport = getTemplateDependenciesImport;

var _loaderUtils = require("loader-utils");

var _constants = require("../constants");

var _getImportStr = require("../utils/get-import-str");

var _toVar = require("../utils/to-var");

function getAssignments(assignments) {
  if (assignments === '') {
    return '{};';
  }

  return `{${assignments}};`;
}

function joinAssignments(assignment, importVar, key) {
  return [assignment[key], `...${importVar}.${_constants.TEMPLATE_DEPENDENCIES}.${key}`].filter(Boolean).join(',\n');
}

function getImports(imports, assignments) {
  return `
    const ${_constants.TEMPLATE_DEPENDENCIES} = {};
    ${imports}
    ${_constants.TEMPLATE_DEPENDENCIES}.templates = ${getAssignments(assignments.templates)}
    ${_constants.TEMPLATE_DEPENDENCIES}.globals = ${getAssignments(assignments.globals)}
    ${_constants.TEMPLATE_DEPENDENCIES}.extensions = ${getAssignments(assignments.extensions)}
    ${_constants.TEMPLATE_DEPENDENCIES}.filters = ${getAssignments(assignments.filters)}
    ${_constants.TEMPLATE_DEPENDENCIES}.assets = ${getAssignments(assignments.assets)}
    `;
}

function foldDependenciesToImports(loaderContext, esModule, [imports, assignment], [, fullPath], i) {
  const path = (0, _loaderUtils.stringifyRequest)(loaderContext, fullPath.toString());
  const importVar = (0, _toVar.toVar)(`${_constants.IMPORTS_PREFIX}_dep_${i}`);
  const join = joinAssignments.bind(null, assignment, importVar);
  return [`
        ${imports}
        ${(0, _getImportStr.getImportStr)(path, esModule)(importVar)}
        `, {
    templates: join('templates'),
    globals: join('globals'),
    extensions: join('extensions'),
    filters: join('filters'),
    assets: join('assets')
  }];
}
/**
 * Import nested templates dependencies
 *
 * @example
 *     var __nunjucks_module_dependencies__ = {}
 *     import dep0 from './nested-template.njk';
 *     __nunjucks_module_dependencies__.templates = {
 *         ...dep0.__nunjucks_module_dependencies__.templates
 *     };
 *
 * @param {Object} loaderContext
 * @param {boolean} esModule
 * @param {Array<string[]>} dependencies
 * @returns {string}
 */


function getTemplateDependenciesImport(loaderContext, esModule, dependencies) {
  return getImports(...dependencies.reduce(foldDependenciesToImports.bind(null, loaderContext, esModule), ['', {
    templates: '',
    globals: '',
    extensions: '',
    filters: '',
    assets: ''
  }]));
}