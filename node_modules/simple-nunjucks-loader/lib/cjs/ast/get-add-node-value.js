"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAddNodeValue = getAddNodeValue;

var _nunjucks = _interopRequireDefault(require("nunjucks"));

var _ImportWrapper = require("../import-wrapper/ImportWrapper");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Parse `Add` value to expression
 * @example
 *   'foo' + bar + 'qux'
 *
 * @param {nunjucks.nodes.Add} node
 *
 * @returns {ImportWrapper}
 */
function getAddNodeValue(node) {
  if (!(node instanceof _nunjucks.default.nodes.Add)) {
    throw new TypeError('Wrong node type');
  }

  const stack = [node.left, node.right];
  const value = new _ImportWrapper.ImportWrapper();

  while (stack.length) {
    const node = stack.shift();

    if (node instanceof _nunjucks.default.nodes.Add) {
      stack.unshift(node.left, node.right);
      continue;
    }

    if (node instanceof _nunjucks.default.nodes.Literal) {
      value.addLiteral(node.value);
      continue;
    }

    if (node instanceof _nunjucks.default.nodes.Symbol) {
      value.addSymbol(node.value);
      continue;
    }

    throw new TypeError('Unsupported node signature');
  }

  return value;
}